apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -c -f docker-compose.yaml -o stream-beaver-helm
    kompose.service.type: LoadBalancer
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: fastapi
  name: fastapi
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: fastapi
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -c -f docker-compose.yaml -o stream-beaver-helm
        kompose.service.type: LoadBalancer
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: fastapi
    spec:
      containers:
        - args:
            - sh
            - -c
            - pip install -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000
          image: tiangolo/uvicorn-gunicorn-fastapi:python3.8
          name: fastapi
          ports:
            - containerPort: 8000
              protocol: TCP
          volumeMounts:
            - mountPath: /app/main.py
              name: fastapi-cm0
              subPath: main.py
            - mountPath: /app/requirements.txt
              name: fastapi-cm1
              subPath: requirements.txt
            - mountPath: /app/config.json
              name: fastapi-cm2
              subPath: config.json
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: main.py
                path: main.py
            name: fastapi-cm0
          name: fastapi-cm0
        - configMap:
            items:
              - key: requirements.txt
                path: requirements.txt
            name: fastapi-cm1
          name: fastapi-cm1
        - configMap:
            items:
              - key: config.json
                path: config.json
            name: fastapi-cm2
          name: fastapi-cm2
